package objects

import (
	"fmt"
	"testing"
)

// Test commit functions using actual commit objects generated by git
// tests Seralizing, Byte Layout, modification functions (SetAuthor, Committer...)
// and object size
func TestCommit(t *testing.T) {
	commit := &GitCommit{}
	commit.SetAuthorAndTime("Simon Taye", "mulat.simon@gmail.com", 1623004337, 0)
	commit.SetCommitterAndTime("Simon Taye", "mulat.simon@gmail.com", 1623004337, 0)
	commit.TreeHash = "a6fea408f7673f5ef6fa1d8561ee7bc06fd69d3a"
	commit.Msg = "Initial commit\n\n" +
		"Created package to parse .ini files and some tests.\n" +
		"Created basic README"
	expectedHash := "0a7dc15c18075d667bcf5baebbf8787c73484bc8"
	hash := Hash(commit)

	if hash != expectedHash {
		t.Errorf("Expected hash: %s\nGot: %s", expectedHash, hash)
		fmt.Printf("Commit data:\n%s", string(commit.Serialize()))
	}

	if commit.computeSize() != 257 {
		t.Errorf("Expected size to be 257, Got: %d", commit.computeSize())
		fmt.Printf("Commit data:\n%s", string(commit.Serialize()))
	}

}

// Intended to test that commits can be correctly recreated from a  []byte (which is just
// a bunch of bytes that represent an ANSI string"
func TestCommitDeseralizing(t *testing.T) {
	commit := &GitCommit{}
	commit.SetAuthorAndTime("Simon Taye", "mulat.simon@gmail.com", 1623004337, 0)
	commit.SetCommitterAndTime("Simon Taye", "mulat.simon@gmail.com", 1623004337, 0)
	commit.TreeHash = "a6fea408f7673f5ef6fa1d8561ee7bc06fd69d3a"
	commit.Msg = "Initial commit\n\n" +
		"Created package to parse .ini files and some tests.\n" +
		"Created basic README"
	expectedHash := "0a7dc15c18075d667bcf5baebbf8787c73484bc8"

	// Recreate a commit from a commit string as stored by git
	newCommit := &GitCommit{}
	newCommit.Deserialize(commit.Serialize())

	hash := Hash(newCommit)

	if hash != expectedHash {
		t.Errorf("Expected hash: %s\nGot: %s", expectedHash, hash)
		fmt.Printf("Commit data:\n%s", string(newCommit.Serialize()))
	}

	if newCommit.computeSize() != 257 {
		t.Errorf("Expected size to be 257, Got: %d", newCommit.computeSize())
		fmt.Printf("Commit data:\n%s", string(newCommit.Serialize()))
	}
}
